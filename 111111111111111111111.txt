19:02:08
【状元】SKY[渣渣]夏蛊 2016/11/7 19:02:08
不是人干的事情
【管理员】SKY[夜空]落星星 2016/11/7 19:02:24
直接出x86，没法优化了

【状元】SKY[渣渣]夏蛊 2016/11/7 19:02:34
是的
19:02:48
【状元】SKY[渣渣]夏蛊 2016/11/7 19:02:48
直接出x86跟编译型语言没什么区别
【管理员】SKY[夜空]落星星 2016/11/7 19:02:48
举个例子  9!=9*8*7*6*5*4*3*2*1

【状元】SKY[渣渣]夏蛊 2016/11/7 19:03:01
只是把编译过程移后了
【管理员】SKY[夜空]落星星 2016/11/7 19:03:04
9!=9*8*7*6*5*4*3*2*1=362880
【管理员】SKY[夜空]落星星 2016/11/7 19:03:28
那么 如果C++模板元去做，那么 编译后的代码就是 cout<<362880
【管理员】SKY[夜空]落星星 2016/11/7 19:03:41
也就是执行编译的是个立即数
【管理员】SKY[夜空]落星星 2016/11/7 19:03:52
如果纯C++编译，那么 肯定有计算过程

【状元】SKY[渣渣]夏蛊 2016/11/7 19:04:07
惰性》
【管理员】SKY[夜空]落星星 2016/11/7 19:04:05
C++执行的时候需要算 9*8*7*6*5*4*3*2*1
【管理员】SKY[夜空]落星星 2016/11/7 19:04:23
JIT之所以会比普通C++快就是因为hotspot
【管理员】SKY[夜空]落星星 2016/11/7 19:04:42
hotspot类似模板元，会先预判热点，然后优化掉

【状元】SKY[渣渣]夏蛊 2016/11/7 19:04:47
什么是hotspot
19:04:59
【管理员】SKY[夜空]落星星 2016/11/7 19:04:59
比如 你的代码有100处9*8*7*6*5*4*3*2*1
【管理员】SKY[夜空]落星星 2016/11/7 19:05:07
第一处计算，其他处立即数了
【状元】SKY[啥啥]66666 2016/11/7 19:05:17
就是代码运行比较多的地方
【状元】SKY[啥啥]66666 2016/11/7 19:05:20
热点
【管理员】SKY[夜空]落星星 2016/11/7 19:05:26

【管理员】SKY[夜空]落星星 2016/11/7 19:05:41
C++不也是有inline一类的咩

【状元】SKY[渣渣]夏蛊 2016/11/7 19:05:43


【状元】SKY[渣渣]夏蛊 2016/11/7 19:05:47
我女朋友。。。

【状元】SKY[渣渣]夏蛊 2016/11/7 19:05:51
问的什么鬼问题
【管理员】SKY[夜空]落星星 2016/11/7 19:06:01
inline也是为了热点嘛
【管理员】SKY[夜空]落星星 2016/11/7 19:06:10
思想压根不一样
【白丁】SKY[学生]蓝天 2016/11/7 19:06:12
pc界面开发用什么好带你
【白丁】SKY[学生]蓝天 2016/11/7 19:06:19
用什么好点
【管理员】SKY[夜空]落星星 2016/11/7 19:06:20
C++是编译期预判多
【状元】SKY[啥啥]66666 2016/11/7 19:06:22
~~ inline 是为了 消除函数调用
【状元】SKY[啥啥]66666 2016/11/7 19:06:25
不是热点
【管理员】SKY[夜空]落星星 2016/11/7 19:06:25
JIT是运行时预判
【管理员】SKY[夜空]落星星 2016/11/7 19:06:30
类似
【状元】SKY[啥啥]66666 2016/11/7 19:06:30
JIT把这些东西  编译成本地代码 执行 并进行 某些优化

【状元】SKY[渣渣]夏蛊 2016/11/7 19:06:36
inline直接嵌入代码到调用点
19:06:34
【状元】SKY[学生]神仙 2016/11/7 19:06:34

【管理员】SKY[夜空]落星星 2016/11/7 19:06:41
inline直接嵌入
【管理员】SKY[夜空]落星星 2016/11/7 19:06:46

【管理员】SKY[夜空]落星星 2016/11/7 19:06:59
这个是栈上替换
【管理员】SKY[夜空]落星星 2016/11/7 19:07:03
一样
【管理员】SKY[夜空]落星星 2016/11/7 19:07:26
诉求差不多
【管理员】SKY[夜空]落星星 2016/11/7 19:08:18

【管理员】SKY[夜空]落星星 2016/11/7 19:08:59
JAVA应该算混合体

【状元】SKY[渣渣]夏蛊 2016/11/7 19:09:08
有什么好处
【管理员】SKY[夜空]落星星 2016/11/7 19:09:14

【管理员】SKY[夜空]落星星 2016/11/7 19:09:16
两头堵
【状元】SKY[学生]神仙 2016/11/7 19:10:04
java都是jit吗

【状元】SKY[渣渣]夏蛊 2016/11/7 19:10:13
JIT编译通俗来说，是编译到x86代码吗

【状元】SKY[渣渣]夏蛊 2016/11/7 19:10:30
还是只要可以在运行期产生thunk代码的都算作JIT
【状元】SKY[啥啥]66666 2016/11/7 19:10:33
JIT是一种技术
【状元】SKY[啥啥]66666 2016/11/7 19:10:38
编译到本地代码

【状元】SKY[渣渣]夏蛊 2016/11/7 19:10:50
一定是本地的吗，中间码算不算JIT
【状元】SKY[啥啥]66666 2016/11/7 19:10:54
是的~~ 即时编译技术
【管理员】SKY[夜空]落星星 2016/11/7 19:11:02
上了opcode的都算
【管理员】SKY[夜空]落星星 2016/11/7 19:11:07
即时编译嘛

【状元】SKY[渣渣]夏蛊 2016/11/7 19:11:30
比如 脚本源码 ->(JIT)-> 中间码 ->(JIT)-> x86
【管理员】SKY[夜空]落星星 2016/11/7 19:11:33
我搞的AS3=>AS3的就脱离本地编译器了
【管理员】SKY[夜空]落星星 2016/11/7 19:11:50
说白了 我AS3到OPCODE的过程，完全是SWF本身解析的
【管理员】SKY[夜空]落星星 2016/11/7 19:12:09
并没有过AS3编译期
【管理员】SKY[夜空]落星星 2016/11/7 19:12:13
编译器

【状元】SKY[渣渣]夏蛊 2016/11/7 19:12:31
就是说，你的源码写在“源码里头”
【管理员】SKY[夜空]落星星 2016/11/7 19:12:31
这样可以直接到处eval源码
【管理员】SKY[夜空]落星星 2016/11/7 19:12:37
对头

【状元】SKY[渣渣]夏蛊 2016/11/7 19:12:42
类似于JavaScript的evaluation
【管理员】SKY[夜空]落星星 2016/11/7 19:12:49
我可以把代码存到数据库里，
【管理员】SKY[夜空]落星星 2016/11/7 19:12:59
而AS3本身是没有eval的，
【管理员】SKY[夜空]落星星 2016/11/7 19:13:08
opcode的一般都没eval

【状元】SKY[渣渣]夏蛊 2016/11/7 19:13:13
这个还是明白的，不过刚刚你说的 为什么opcode转机器码不能优化？
【管理员】SKY[夜空]落星星 2016/11/7 19:13:28
转x86了，你咋计算热点
【管理员】SKY[夜空]落星星 2016/11/7 19:13:32
在汇编里算？

【状元】SKY[渣渣]夏蛊 2016/11/7 19:13:36
热点到底是啥。。。

【状元】SKY[渣渣]夏蛊 2016/11/7 19:13:49
有些没看懂
【管理员】SKY[夜空]落星星 2016/11/7 19:13:51
比如 重复执行100次的某函数

【状元】SKY[渣渣]夏蛊 2016/11/7 19:13:53
有什么资料看下吗
【状元】SKY[啥啥]66666 2016/11/7 19:14:57
  热点路径  以及 热点方法 ~~都可以
【状元】SKY[啥啥]66666 2016/11/7 19:15:12
说白了就是比如说 某个循环执行了超过 多少多少次
【状元】SKY[啥啥]66666 2016/11/7 19:15:19
我就直接编译成本地或者 什么码了
【状元】SKY[啥啥]66666 2016/11/7 19:15:27
这样跑的快
【管理员】SKY[夜空]落星星 2016/11/7 19:15:30

19:18:05
【管理员】SKY[夜空]落星星 2016/11/7 19:18:05

【管理员】SKY[夜空]落星星 2016/11/7 19:18:21
我熟悉的都是死循环切换的那种
【管理员】SKY[夜空]落星星 2016/11/7 19:18:25
开发者通常会比较熟悉那种“在一个while循环中切换”的解释器  也就是这种
【管理员】SKY[夜空]落星星 2016/11/7 19:18:43
hotspot的 应该超级复杂

【状元】SKY[渣渣]夏蛊 2016/11/7 19:19:10


【状元】SKY[渣渣]夏蛊 2016/11/7 19:19:14
这个算Parser吧
【管理员】SKY[夜空]落星星 2016/11/7 19:19:32
应该是动态生成x86然后执行 + while循环堆栈解释 + native lib code 混 
【管理员】SKY[夜空]落星星 2016/11/7 19:19:43

【管理员】SKY[夜空]落星星 2016/11/7 19:19:54
因为最核心的Object类的方法是JNI到C的
【管理员】SKY[夜空]落星星 2016/11/7 19:20:15
也就是说很多方法级别的是C的native两头堵的

【状元】SKY[渣渣]夏蛊 2016/11/7 19:20:21
这个东西是不是没有X86生成，而算是一个parser
【管理员】SKY[夜空]落星星 2016/11/7 19:20:35
对
【管理员】SKY[夜空]落星星 2016/11/7 19:20:53
所以 不同VM压根套路不一样，

【状元】SKY[渣渣]夏蛊 2016/11/7 19:21:56
还是刚才那个问题。。。编译到opcode，无法优化？感觉我和你说的opcode应该不是同一个opcode概念
【管理员】SKY[夜空]落星星 2016/11/7 19:22:12
因为很少有人去重复发明general-purpose  programming language吧

【状元】SKY[渣渣]夏蛊 2016/11/7 19:22:33
源码=>优化opcode=>x86

【状元】SKY[渣渣]夏蛊 2016/11/7 19:22:43
源码=>opcode=>优化x86
【管理员】SKY[夜空]落星星 2016/11/7 19:22:47
这种是Cminus的 vczh大神的

【状元】SKY[渣渣]夏蛊 2016/11/7 19:22:48
为啥子不行
【管理员】SKY[夜空]落星星 2016/11/7 19:23:00
可以
【管理员】SKY[夜空]落星星 2016/11/7 19:23:03
没啥不可以
