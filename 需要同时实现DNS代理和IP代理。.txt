①linux必须具有路由的功能。
 --客户机发起的所有请求都必须经过该Linux路由器。
②路由器必须具有解析请求的功能。
 --路由器对客户机浏览器发起的HTTP请求进行代理。
   HTTP请求分：DNS查询、具体网址的访问。



远程shadowsocks服务器实现了远程DNS查询服务。
但是由浏览器的PAC来进行限制。根据网址进行判断走原始的DNS+request处理路径，
还是走国外的DNS+request处理路径。



那么在路由器层实现的话，
走的都是默认的DNS，以及默认的Request处理。
任何终端都无需进行配置，
所以这里要实现DNS代理和ip代理。

实现了IP代理就可以实现DNS代理，
DNS的查询功能通过查询正确的域名地址服务器或通过IP代理服务器进行。

理论上应是通过IP代理服务器进行的查询，

那么我们要怎么做？
如果不区别这二者的话，就直接把所有的通过网关的数据发送到
shadowsocks的代理端口即可，
但是此时则要求我们的服务器可以区别出国内的地址或是国外的地址后
再决定是否发送到shadowsocks端口进行代理。

相当于我们进行拆分开来了，DNS步骤我们自己搞，请求部分由shadowsocks进行处理。

或者DNS请求也交给shadowsocks，但是这就必须要求shadowsocks支持代理或不代理的DNS查询，


即需要先根据域名进行判断，

判断一下哪些域名需要经过代理。
但是这样做的话，。。。。。

哪些域名转发到shadowsocks是可以的。

哪些IP转发到shadowsocks也是可以的。

shadowsocks的查询结果永远正确，但是他得到的IP可以由我们来决定是否进行代理。

即规划iptables。

访问哪些段的IP，发送给哪个网关。


shadowsocks解析出的IP是网站的真实IP地址，真实IP地址判断是否为国内的，
国内的不发送到shadowsocks，（因为shadowsocks会用自己的服务器IP进行访问外网）

国外的发送到shadowsocks，shadowsocks会利用代理服务器ip进行访问，
出口入口处无法进行判断。
只能得到国内的IP或者国外的IP。

而我们要在软件对接的那一层做处理。
一旦代理发起，DNS和代理IP是一块工作的。

DNS查询后，代理IP的访问也一定是走的通的。

所以要在