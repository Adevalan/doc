【管理员】SKY[夜空]落星星
高级业务逻辑都是COM和ATL的
【状元】SKY[元素]Badder 2016/11/7 18:03:38
COM
ATL
【秀才】SKY[工作]RiHong 2016/11/7 18:04:13
，呵呵，再给说一下这句是什么意思吧
【秀才】SKY[工作]RiHong 2016/11/7 18:04:24
这个是什么意思
【管理员】SKY[夜空]落星星 2016/11/7 18:04:28
就是给变量赋值
【状元】SKY[元素]Badder 2016/11/7 18:04:46

【状元】SKY[元素]Badder 2016/11/7 18:04:51
。。。有点看不懂
【秀才】SKY[工作]RiHong 2016/11/7 18:05:01
给赋值中吗
【进士】SKY[萌新]小和尚 2016/11/7 18:05:09
lambda？
【白丁】SKY[学生]Xbye 2016/11/7 18:05:10
太黑了 看不懂
【秀才】SKY[工作]RiHong 2016/11/7 18:05:11
给赋值吗
18:05:27
【状元】SKY[元素]Badder 2016/11/7 18:05:27
不知道
【管理员】SKY[夜空]落星星 2016/11/7 18:05:32
迭代累加
【状元】SKY[元素]Badder 2016/11/7 18:07:01
这么晚了还在上班啊
【状元】SKY[元素]Badder 2016/11/7 18:07:13
我都玩了两盘300了
18:09:28
【管理员】SKY[夜空]落星星 2016/11/7 18:09:28
今天项目验收
【管理员】SKY[夜空]落星星 2016/11/7 18:09:33
准备撤了
【管理员】SKY[夜空]落星星 2016/11/7 18:10:04
甲方和监理好像都看过了
【管理员】SKY[夜空]落星星 2016/11/7 18:10:18
等意见 没等到意见  再签备忘录
【管理员】SKY[夜空]落星星 2016/11/7 18:10:36
然后他们忘不忘是他们的事情了
18:11:21
【管理员】SKY[夜空]落星星 2016/11/7 18:11:21
监理整的一脸认真的表情…… 我也是醉了
【管理员】SKY[夜空]落星星 2016/11/7 18:11:54
甲方PM更狠，一个标点一个标点验需求
【管理员】SKY[夜空]落星星 2016/11/7 18:12:06
快看瞎了
【状元】SKY[元素]Badder 2016/11/7 18:12:38

【管理员】SKY[夜空]落星星 2016/11/7 18:12:38
容易么我……
【状元】SKY[元素]Badder 2016/11/7 18:12:54
星星叔辛苦了

【状元】SKY[渣渣]夏蛊 2016/11/7 18:13:02
那个啥
【状元】SKY[元素]Badder 2016/11/7 18:13:10
回去多休息下啦

【状元】SKY[渣渣]夏蛊 2016/11/7 18:13:13
脚本语言和解释性语言的运行原理是否一样？
【管理员】SKY[夜空]落星星 2016/11/7 18:13:22
不一定
【状元】SKY[元素]Badder 2016/11/7 18:13:22
不一样

   岁月如歌,加入本群

【状元】SKY[渣渣]夏蛊 2016/11/7 18:13:38
解释性语言是动态翻译？？？把中间代码每一句翻译到机器码？我感觉有点不对啊
【童生】SKY[工作]随便你 2016/11/7 18:13:42
今天看新闻  19岁女孩卖身救母，好不容易
【管理员】SKY[夜空]落星星 2016/11/7 18:13:44
脚本过JIT的 就算编译
【管理员】SKY[夜空]落星星 2016/11/7 18:13:48
不过的算解释
【状元】SKY[元素]Badder 2016/11/7 18:14:05
@SKY[工作]随便你 长得怎么样

【状元】SKY[渣渣]夏蛊 2016/11/7 18:14:17
不过JIT是不是在脚本引擎内定义很多的Handler，每个Handler实现元指令
【童生】SKY[工作]随便你 2016/11/7 18:14:22
看起来可以

【状元】SKY[渣渣]夏蛊 2016/11/7 18:14:26
之后的跑其实都是跑内定的代码

【状元】SKY[渣渣]夏蛊 2016/11/7 18:14:31
而不是动态产生的二进制
【童生】SKY[工作]随便你 2016/11/7 18:14:29
你问这干啥？
【管理员】SKY[夜空]落星星 2016/11/7 18:14:31
不过的 一般就跑AST了
【童生】SKY[工作]随便你 2016/11/7 18:14:32

18:14:58
【管理员】SKY[夜空]落星星 2016/11/7 18:14:58
过的 是指前端脚本 直接生成opcode， 后端opcode再去映射成机器码

【状元】SKY[渣渣]夏蛊 2016/11/7 18:15:15
真的存在opcode映射到机器码这种玩意儿？？？
【管理员】SKY[夜空]落星星 2016/11/7 18:15:30
JVM  .NET FRAMEWORK  AVM2 都是啊
【管理员】SKY[夜空]落星星 2016/11/7 18:15:41
LLVM也是

【状元】SKY[渣渣]夏蛊 2016/11/7 18:16:09
我的个人理解是
比如 
脚本 ： 
a + b 
 翻译为
  invoke add(operator){
  add regx1,regx2 
 }

【状元】SKY[渣渣]夏蛊 2016/11/7 18:16:19
也就是不做二进制转换

【状元】SKY[渣渣]夏蛊 2016/11/7 18:16:30
二进制的代码在脚本引擎内已存在

【状元】SKY[渣渣]夏蛊 2016/11/7 18:16:49
各种元指令的二进制，然后它们之间可以组合，
18:17:19
【管理员】SKY[夜空]落星星 2016/11/7 18:17:19
我玩过AVM2

【状元】SKY[渣渣]夏蛊 2016/11/7 18:17:46
比如add 功能，脚本引擎里头有一个add方法，解析/执行语法的时候，其实是脚本引擎内的add方法在运行
【管理员】SKY[夜空]落星星 2016/11/7 18:17:52
实际上 每段代码都会变成opcode

【状元】SKY[渣渣]夏蛊 2016/11/7 18:17:55
这是正确的理解还是错误的
【管理员】SKY[夜空]落星星 2016/11/7 18:17:54

【管理员】SKY[夜空]落星星 2016/11/7 18:17:56
比如 这样
【管理员】SKY[夜空]落星星 2016/11/7 18:18:09
AS3内联AS3 的ASM 也就是opcode
【管理员】SKY[夜空]落星星 2016/11/7 18:18:20
和C是一个道理
【管理员】SKY[夜空]落星星 2016/11/7 18:18:32

【管理员】SKY[夜空]落星星 2016/11/7 18:18:46
那么实际内联的asm 和函数生成的ASM没本质的区别

【状元】SKY[渣渣]夏蛊 2016/11/7 18:18:51

那我理解的这种算什么
18:19:36
【状元】SKY[渣渣]夏蛊 2016/11/7 18:19:36
比如 
"user.getAddr()"
对应到脚本引擎中的user对象的getAddr方法，
站在语法层面上来说的话，各种操作符，关键字也用这种方式来实现，这种可能不
【管理员】SKY[夜空]落星星 2016/11/7 18:19:37
这种算是解析成语法树 然后执行这个语法树本身了，相当于parser
【管理员】SKY[夜空]落星星 2016/11/7 18:19:47
这种解释执行的 并没有JIT
【管理员】SKY[夜空]落星星 2016/11/7 18:19:54
所以也谈不上opcode

【状元】SKY[渣渣]夏蛊 2016/11/7 18:19:59
也就是存在这种东西了？

【状元】SKY[渣渣]夏蛊 2016/11/7 18:20:05
内定的语法执行器
【管理员】SKY[夜空]落星星 2016/11/7 18:20:10
可以

【状元】SKY[渣渣]夏蛊 2016/11/7 18:20:15
而不是语法转换器

【状元】SKY[渣渣]夏蛊 2016/11/7 18:20:27
哪些语言有这种设计结构的
【管理员】SKY[夜空]落星星 2016/11/7 18:21:24
一般 perl ruby等，是转分析树的
【管理员】SKY[夜空]落星星 2016/11/7 18:21:35
换句话说 转成分析树后 再也回不去了
18:21:39
【状元】SKY[渣渣]夏蛊 2016/11/7 18:21:39
这种算是解析成语法树 然后执行这个语法树本身了，相当于parser
对差不多这个意思，解析后，直接执行语法中包含的各种Handler标记了，而不是转换到Opcode
【管理员】SKY[夜空]落星星 2016/11/7 18:21:44
一般这种是解释执行的
【管理员】SKY[夜空]落星星 2016/11/7 18:21:51
也就是有interapter

【状元】SKY[渣渣]夏蛊 2016/11/7 18:21:55
perl ruby是不是我刚才说的那种

【状元】SKY[渣渣]夏蛊 2016/11/7 18:22:03
完全解释执行的状态
【管理员】SKY[夜空]落星星 2016/11/7 18:22:04
恩 ruby 1.8之前是的
【管理员】SKY[夜空]落星星 2016/11/7 18:22:14
ruby 1.9以后 改成YARV了
【管理员】SKY[夜空]落星星 2016/11/7 18:22:26
分析树型的 都是这样的

【状元】SKY[渣渣]夏蛊 2016/11/7 18:22:57
1.9开始就是转到二进制了吗
【管理员】SKY[夜空]落星星 2016/11/7 18:23:02
JAVA C#  AS3这类的相反 是分析树被取代了，是编译生成了字节码