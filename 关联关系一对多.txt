在保存之前并不知道主表的ID。
而子表需要做一些关联。
这种方式会产生一对多的情况。

关联关系都会产生多对一的情况，
不加以限制的话，
外键仅仅实现了表之间的关联。
而一对一则是数据之间附带的属性。

除非利用主键，
利用两个唯一的值产生关联。
即 主键在两张表都是唯一的。
而且该列不可重复。
一对一有很多的实现方案。

或者A保存B的id。
B在保存A的id。

但是有外键约束的情况下，
这种关联关系不能一次性建立。
因为A受外键约束，必须先插入从表。
而B受外键约束的情况下，必须先插入主表。

两者不能设置外键约束。





而A保存B的id。
B不保存A的ID。
即：保存另一张表的Id的一方为从表。
该从表插入时，必须保证主表已存在。

那么就先存入A，得到A的ID。

而某些人则想先插入B怎么办，即使是没有外键的情况下，
那也没办法获取A的id。需要做两次离散操作。
先插入B，再插入A，再更新B。

而最好的方案是，A的ID已知，如何已知呢？没有通过任何手段知道，
自增长情况下，由于并发性的存在，只有插入数据后才可感知Id的存在，是不可计算、
不可预测的。

因此要么就是不使用自增长。那么两表即使两个主键关联，乃至外键关联。
都不在乎谁先谁后。因为其关联字段值 的是确立的。
